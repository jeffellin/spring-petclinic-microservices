def apps = [
    'spring-petclinic-vets-service': [
        buildPipeline: 'pipelines/update-k8s-app.pipeline',
        kenv: 'stage'
    ]
]


apps.each { name, appInfo ->


    pipelineJob(name) {
       description("Job to build '$name'. Generated by the Seed Job, please do not change !!!")
       environmentVariables(
            APP_NAME: kenv+"-" + name,
            K_ENV: kenv
       )
       definition {
            cps {
                script(readFileFromWorkspace(appInfo.buildPipeline))
                sandbox()
            }
        }        
        triggers {
             genericTrigger {
                genericVariables {
                    genericVariable {
                         key("TYPE")
                         value("\$.type")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                    genericVariable {
                         key("DIGEST")
                         value("\$.event_data.resources[0].digest")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                    genericVariable {
                         key("RESOURCE_URL")
                         value("\$.event_data.resources[0].resource_url")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                }
            token(kenv+"-"+name)
            printContributedVariables(true)
            printPostContent(true)
            regexpFilterText("\$TYPE")
            regexpFilterExpression("PUSH_ARTIFACT")

        }
        properties{
            disableConcurrentBuilds()
        }
    }
}
}
       
